class Solution {
    public long minimumCost(String source, String target, char[] original, char[] changed, int[] cost) {
        int[][] H=new int[26][26];
        for(int i=0;i<26;i++){
            Arrays.fill(H[i],Integer.MAX_VALUE);
            H[i][i]=0;
        }
        for(int i=0;i<cost.length;i++){
            H[original[i]-'a'][changed[i]-'a']=Math.min(H[original[i]-'a'][changed[i]-'a'],cost[i]);
        }
        for(int k=0;k<26;k++){
            for(int i=0;i<26;i++){
                if(H[i][k]<Integer.MAX_VALUE){
                    for(int j=0;j<26;j++){
                        if(H[k][j]<Integer.MAX_VALUE)
                            H[i][j]=Math.min(H[i][j],H[i][k]+H[k][j]);
                    }
                }
            }
        }
        long ans=0L;
        for(int i=0;i<source.length();i++){
            int U=source.charAt(i)-'a';
            int V=target.charAt(i)-'a';
            if (H[U][V] == Integer.MAX_VALUE)
                return -1L; 
            else
                ans+=(long)H[U][V];
        }
        return ans;
    }
}
