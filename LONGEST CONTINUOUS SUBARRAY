class Solution {
    public int longestSubarray(int[] nums, int limit) {
        LinkedList<Integer> A=new LinkedList<>();
        LinkedList<Integer> B=new LinkedList<>();
        int C=0;
        int l=0;
        for(int i=0;i<nums.length;i++){
            int n=nums[i];
            while(A.size()>0 && n<A.getLast()){
                A.removeLast();
            }
            A.add(n);
            while(B.size()>0 && n>B.getLast()){
                B.removeLast();
            }
            B.add(n);
            while(B.getFirst()-A.getFirst()>limit){
                if(nums[l]==B.getFirst())
                    B.removeFirst();
                if(nums[l]==A.getFirst())
                    A.removeFirst();
                l++;
            }
            int D=i-l+1;
            C=Math.max(C,D);
        }
        return C;
    }
}
