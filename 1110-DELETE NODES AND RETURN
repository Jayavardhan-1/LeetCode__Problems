/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private boolean[] A=new boolean[1001];
    private List<TreeNode> B;
    public TreeNode FOREST(TreeNode R,boolean f){
        if(R==null) 
            return R;
        R.left=FOREST(R.left,A[R.val]);
        R.right=FOREST(R.right,A[R.val]);
        if(!A[R.val] && f) 
            B.add(R);
        return A[R.val]?null:R;
    }
    public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
        B=new ArrayList<>();
        for(int n:to_delete){
            A[n]=true;
        }
        FOREST(root,true);
        return B;
    }
}
